--------------------------------------------------------
--  File created - Tuesday-December-15-2020   
--------------------------------------------------------
DROP TABLE "SUPERMERCADO"."ARTICULO" cascade constraints;
DROP TABLE "SUPERMERCADO"."BITACORA" cascade constraints;
DROP TABLE "SUPERMERCADO"."CATEGORIA" cascade constraints;
DROP TABLE "SUPERMERCADO"."CLIENTE" cascade constraints;
DROP TABLE "SUPERMERCADO"."FACTURA" cascade constraints;
DROP TABLE "SUPERMERCADO"."FACTURADETALLE" cascade constraints;
DROP TABLE "SUPERMERCADO"."MODO_PAGO" cascade constraints;
DROP SEQUENCE "SUPERMERCADO"."ARTICULOS_SEQ";
DROP SEQUENCE "SUPERMERCADO"."BITACORA_SEQ";
DROP SEQUENCE "SUPERMERCADO"."CATEGORIAS_SEQ";
DROP SEQUENCE "SUPERMERCADO"."CLIENTES_SEQ";
DROP SEQUENCE "SUPERMERCADO"."FACTURADETALLE_SEQ";
DROP SEQUENCE "SUPERMERCADO"."FACTURA_SEQ";
DROP FUNCTION "SUPERMERCADO"."FORMATEARPRECIO";
DROP FUNCTION "SUPERMERCADO"."OBTENERCLIENTEPORID";
DROP FUNCTION "SUPERMERCADO"."OBTENERMODOPAGO";
DROP FUNCTION "SUPERMERCADO"."OBTENERNOMBRECATEGORIA";
DROP FUNCTION "SUPERMERCADO"."OBTENERPRECIOARTICULO";
DROP PACKAGE "SUPERMERCADO"."CATEGORIAS";
DROP PACKAGE "SUPERMERCADO"."CLIENTES";
DROP PACKAGE BODY "SUPERMERCADO"."CATEGORIAS";
DROP PACKAGE BODY "SUPERMERCADO"."CLIENTES";
DROP PROCEDURE "SUPERMERCADO"."CREARDETALLEFACTURA";
DROP PROCEDURE "SUPERMERCADO"."CREARFACTURA";
DROP PROCEDURE "SUPERMERCADO"."FETCHARTICULO";
DROP PROCEDURE "SUPERMERCADO"."FETCHCLIENTE";
DROP PROCEDURE "SUPERMERCADO"."INSERTARTICULO";
DROP PROCEDURE "SUPERMERCADO"."UPDATEARTICULO";
--------------------------------------------------------
--  DDL for Sequence ARTICULOS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUPERMERCADO"."ARTICULOS_SEQ"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence BITACORA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUPERMERCADO"."BITACORA_SEQ"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 9 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence CATEGORIAS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUPERMERCADO"."CATEGORIAS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 6 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence CLIENTES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUPERMERCADO"."CLIENTES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence FACTURADETALLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUPERMERCADO"."FACTURADETALLE_SEQ"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 29 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence FACTURA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUPERMERCADO"."FACTURA_SEQ"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 24 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Table ARTICULO
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."ARTICULO" 
   (	"ID_ARTICULO" NUMBER(11,0), 
	"ID_CATEGORIA" NUMBER(11,0), 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"PRECIO" NUMBER(11,2), 
	"CODIGO_CABYS" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Table BITACORA
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."BITACORA" 
   (	"ID_BITACORA" NUMBER(11,0), 
	"FECHA" DATE DEFAULT sysdate, 
	"MENSAJE" VARCHAR2(101 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Table CATEGORIA
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."CATEGORIA" 
   (	"ID_CATEGORIA" NUMBER(11,0), 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"DESCRIPCION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Table CLIENTE
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."CLIENTE" 
   (	"ID_CLIENTE" NUMBER(11,0), 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"APELLIDO" VARCHAR2(100 BYTE), 
	"PROVINCIA" VARCHAR2(100 BYTE), 
	"DIRECCION" VARCHAR2(255 BYTE), 
	"CORREO" VARCHAR2(100 BYTE), 
	"TELEFONO" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Table FACTURA
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."FACTURA" 
   (	"NUM_FACTURA" NUMBER(11,0), 
	"ID_MODOPAGO" NUMBER(11,0), 
	"ID_CLIENTE" NUMBER(11,0), 
	"IVA" NUMBER(11,2), 
	"DESCUENTO" NUMBER(11,2), 
	"FECHA" DATE DEFAULT sysdate, 
	"SUBTOTAL" NUMBER(11,2), 
	"TOTAL" NUMBER(11,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Table FACTURADETALLE
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."FACTURADETALLE" 
   (	"NUM_DETALLEFACTURA" NUMBER(11,0), 
	"NUM_FACTURA" NUMBER(11,0), 
	"ID_ARTICULO" NUMBER(11,0), 
	"PRECIO" NUMBER(11,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Table MODO_PAGO
--------------------------------------------------------

  CREATE TABLE "SUPERMERCADO"."MODO_PAGO" 
   (	"ID_MODOPAGO" NUMBER(11,0), 
	"NOMBRE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
REM INSERTING into SUPERMERCADO.ARTICULO
SET DEFINE OFF;
Insert into SUPERMERCADO.ARTICULO (ID_ARTICULO,ID_CATEGORIA,NOMBRE,PRECIO,CODIGO_CABYS) values (3,2,'ArticuloPrueba',4000,'Codigo');
Insert into SUPERMERCADO.ARTICULO (ID_ARTICULO,ID_CATEGORIA,NOMBRE,PRECIO,CODIGO_CABYS) values (1,3,'ArticuloN',12334.23,'Codigo');
Insert into SUPERMERCADO.ARTICULO (ID_ARTICULO,ID_CATEGORIA,NOMBRE,PRECIO,CODIGO_CABYS) values (2,4,'Prueba',2000,'Prueba');
REM INSERTING into SUPERMERCADO.BITACORA
SET DEFINE OFF;
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (2,to_date('14-DEC-20','DD-MON-RR'),'Se ha registrado un cliente con el id 8');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (3,to_date('15-DEC-20','DD-MON-RR'),'Se ha registrado un Articulo con el id 3');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (4,to_date('15-DEC-20','DD-MON-RR'),'Se actualizado los detalles del cliente con el id 1');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (1,to_date('14-DEC-20','DD-MON-RR'),'Se actualizado los detalles del cliente con el id 1');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (5,to_date('15-DEC-20','DD-MON-RR'),'Se actualizado los detalles del cliente con el id 8');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (6,to_date('15-DEC-20','DD-MON-RR'),'Se actualizado los detalles del cliente con el id 1');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (7,to_date('15-DEC-20','DD-MON-RR'),'Se ha registrado un cliente con el id 9');
Insert into SUPERMERCADO.BITACORA (ID_BITACORA,FECHA,MENSAJE) values (8,to_date('15-DEC-20','DD-MON-RR'),'Se actualizado los detalles del cliente con el id 7');
REM INSERTING into SUPERMERCADO.CATEGORIA
SET DEFINE OFF;
Insert into SUPERMERCADO.CATEGORIA (ID_CATEGORIA,NOMBRE,DESCRIPCION) values (1,'Electrodomestico','Descripcion del electrodomestico');
Insert into SUPERMERCADO.CATEGORIA (ID_CATEGORIA,NOMBRE,DESCRIPCION) values (2,'Granos','Desc Granos');
Insert into SUPERMERCADO.CATEGORIA (ID_CATEGORIA,NOMBRE,DESCRIPCION) values (3,'Tercera Categoria','Categoria de prueba');
Insert into SUPERMERCADO.CATEGORIA (ID_CATEGORIA,NOMBRE,DESCRIPCION) values (4,'Cuarta Categoria','Desc Categoria');
Insert into SUPERMERCADO.CATEGORIA (ID_CATEGORIA,NOMBRE,DESCRIPCION) values (5,'Quinta categoria','Categoria 5');
REM INSERTING into SUPERMERCADO.CLIENTE
SET DEFINE OFF;
Insert into SUPERMERCADO.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,PROVINCIA,DIRECCION,CORREO,TELEFONO) values (8,'Prueba de Trigger','TRS','Heredia','Cualquier cosa','correo@correo.com','123');
Insert into SUPERMERCADO.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,PROVINCIA,DIRECCION,CORREO,TELEFONO) values (1,'Adrian','Rojass','San José','San Juan de Dios
Calle Pedrito Monge del Templo de Testigos de Jehova 125 metros al sureste','adrian@adrian.com','123456');
Insert into SUPERMERCADO.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,PROVINCIA,DIRECCION,CORREO,TELEFONO) values (6,'Estiven','Oviedo','Alajuela','Dev','estiven@estiven.com','12345');
Insert into SUPERMERCADO.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,PROVINCIA,DIRECCION,CORREO,TELEFONO) values (7,'DevP','DevP','Alajuela','DevP','DevP@devp.com','123');
Insert into SUPERMERCADO.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,PROVINCIA,DIRECCION,CORREO,TELEFONO) values (9,'ClienteNuevo','ClienteNuevo','Alajuela','Direccion Cliente','cliente@cliente.com','1234');
REM INSERTING into SUPERMERCADO.FACTURA
SET DEFINE OFF;
Insert into SUPERMERCADO.FACTURA (NUM_FACTURA,ID_MODOPAGO,ID_CLIENTE,IVA,DESCUENTO,FECHA,SUBTOTAL,TOTAL) values (23,2,6,7,30,to_date('15-DEC-20','DD-MON-RR'),18334.23,14117.36);
Insert into SUPERMERCADO.FACTURA (NUM_FACTURA,ID_MODOPAGO,ID_CLIENTE,IVA,DESCUENTO,FECHA,SUBTOTAL,TOTAL) values (22,2,1,7,30,to_date('15-DEC-20','DD-MON-RR'),18334.23,14117.36);
REM INSERTING into SUPERMERCADO.FACTURADETALLE
SET DEFINE OFF;
Insert into SUPERMERCADO.FACTURADETALLE (NUM_DETALLEFACTURA,NUM_FACTURA,ID_ARTICULO,PRECIO) values (26,23,3,4000);
Insert into SUPERMERCADO.FACTURADETALLE (NUM_DETALLEFACTURA,NUM_FACTURA,ID_ARTICULO,PRECIO) values (27,23,1,12334.23);
Insert into SUPERMERCADO.FACTURADETALLE (NUM_DETALLEFACTURA,NUM_FACTURA,ID_ARTICULO,PRECIO) values (28,23,2,2000);
Insert into SUPERMERCADO.FACTURADETALLE (NUM_DETALLEFACTURA,NUM_FACTURA,ID_ARTICULO,PRECIO) values (23,22,3,4000);
Insert into SUPERMERCADO.FACTURADETALLE (NUM_DETALLEFACTURA,NUM_FACTURA,ID_ARTICULO,PRECIO) values (24,22,1,12334.23);
Insert into SUPERMERCADO.FACTURADETALLE (NUM_DETALLEFACTURA,NUM_FACTURA,ID_ARTICULO,PRECIO) values (25,22,2,2000);
REM INSERTING into SUPERMERCADO.MODO_PAGO
SET DEFINE OFF;
Insert into SUPERMERCADO.MODO_PAGO (ID_MODOPAGO,NOMBRE) values (1,'Efectivo');
Insert into SUPERMERCADO.MODO_PAGO (ID_MODOPAGO,NOMBRE) values (2,'Tarjeta');
--------------------------------------------------------
--  DDL for Index CLIENTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."CLIENTE_PK" ON "SUPERMERCADO"."CLIENTE" ("ID_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Index BITACORA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."BITACORA_PK" ON "SUPERMERCADO"."BITACORA" ("ID_BITACORA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Index MODOPAGO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."MODOPAGO_PK" ON "SUPERMERCADO"."MODO_PAGO" ("ID_MODOPAGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Index CATEGORIA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."CATEGORIA_PK" ON "SUPERMERCADO"."CATEGORIA" ("ID_CATEGORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Index ARTICULO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."ARTICULO_PK" ON "SUPERMERCADO"."ARTICULO" ("ID_ARTICULO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Index FACTURADETALLE_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."FACTURADETALLE_ID" ON "SUPERMERCADO"."FACTURADETALLE" ("NUM_DETALLEFACTURA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  DDL for Index FACTURA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUPERMERCADO"."FACTURA_PK" ON "SUPERMERCADO"."FACTURA" ("NUM_FACTURA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO" ;
--------------------------------------------------------
--  Constraints for Table FACTURADETALLE
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" ADD CONSTRAINT "FACTURADETALLE_ID" PRIMARY KEY ("NUM_DETALLEFACTURA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" MODIFY ("PRECIO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" MODIFY ("ID_ARTICULO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" MODIFY ("NUM_FACTURA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" MODIFY ("NUM_DETALLEFACTURA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MODO_PAGO
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."MODO_PAGO" ADD CONSTRAINT "MODOPAGO_PK" PRIMARY KEY ("ID_MODOPAGO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."MODO_PAGO" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."MODO_PAGO" MODIFY ("ID_MODOPAGO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FACTURA
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("SUBTOTAL" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" ADD CONSTRAINT "FACTURA_PK" PRIMARY KEY ("NUM_FACTURA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("FECHA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("NUM_FACTURA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("DESCUENTO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("IVA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("ID_CLIENTE" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."FACTURA" MODIFY ("ID_MODOPAGO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ARTICULO
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."ARTICULO" ADD CONSTRAINT "ARTICULO_PK" PRIMARY KEY ("ID_ARTICULO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."ARTICULO" MODIFY ("CODIGO_CABYS" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."ARTICULO" MODIFY ("PRECIO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."ARTICULO" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."ARTICULO" MODIFY ("ID_CATEGORIA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."ARTICULO" MODIFY ("ID_ARTICULO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CATEGORIA
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."CATEGORIA" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CATEGORIA" ADD CONSTRAINT "CATEGORIA_PK" PRIMARY KEY ("ID_CATEGORIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."CATEGORIA" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CATEGORIA" MODIFY ("ID_CATEGORIA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BITACORA
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."BITACORA" ADD CONSTRAINT "BITACORA_PK" PRIMARY KEY ("ID_BITACORA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."BITACORA" MODIFY ("MENSAJE" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."BITACORA" MODIFY ("FECHA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."BITACORA" MODIFY ("ID_BITACORA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."CLIENTE" ADD CONSTRAINT "CLIENTE_PK" PRIMARY KEY ("ID_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SUPERMERCADO"  ENABLE;
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("CORREO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("DIRECCION" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("PROVINCIA" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("APELLIDO" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "SUPERMERCADO"."CLIENTE" MODIFY ("ID_CLIENTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table ARTICULO
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."ARTICULO" ADD CONSTRAINT "ARTICULO_CATEGORIA_PK" FOREIGN KEY ("ID_CATEGORIA")
	  REFERENCES "SUPERMERCADO"."CATEGORIA" ("ID_CATEGORIA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACTURA
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."FACTURA" ADD CONSTRAINT "FACTURA_CLIENTE_FK" FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "SUPERMERCADO"."CLIENTE" ("ID_CLIENTE") ENABLE;
  ALTER TABLE "SUPERMERCADO"."FACTURA" ADD CONSTRAINT "FACTURA_MODOPAGO_FK" FOREIGN KEY ("ID_MODOPAGO")
	  REFERENCES "SUPERMERCADO"."MODO_PAGO" ("ID_MODOPAGO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACTURADETALLE
--------------------------------------------------------

  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" ADD CONSTRAINT "FACTURADETALLE_ARTICULO_FK" FOREIGN KEY ("ID_ARTICULO")
	  REFERENCES "SUPERMERCADO"."ARTICULO" ("ID_ARTICULO") ENABLE;
  ALTER TABLE "SUPERMERCADO"."FACTURADETALLE" ADD CONSTRAINT "FACTURADETALLE_FACTURA_FK" FOREIGN KEY ("NUM_FACTURA")
	  REFERENCES "SUPERMERCADO"."FACTURA" ("NUM_FACTURA") ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ARTICULO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SUPERMERCADO"."TR_ARTICULO" 
AFTER INSERT OR  UPDATE  ON Articulo
FOR EACH ROW
declare
artirculoid Articulo.id_articulo%type;
BEGIN
artirculoid := nvl(:new.id_articulo,:old.id_articulo);
    IF :NEW.id_articulo IS NOT NULL AND :OLD.id_articulo IS NOT NULL THEN
        INSERT INTO BITACORA(ID_BITACORA,MENSAJE) values (BITACORA_SEQ.NEXTVAL,'Se actualizado un articulo con el id' || artirculoid );
    ELSIF  :OLD.id_articulo IS NULL THEN
        INSERT INTO BITACORA(ID_BITACORA,MENSAJE) values (BITACORA_SEQ.NEXTVAL,'Se ha registrado un Articulo con el id ' || artirculoid );
    END IF;
end ;
/
ALTER TRIGGER "SUPERMERCADO"."TR_ARTICULO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_CATEGORIA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SUPERMERCADO"."TR_CATEGORIA" 
AFTER INSERT OR  UPDATE  ON Categoria
FOR EACH ROW
declare
Categoriaid Categoria.id_categoria%type;
BEGIN
Categoriaid := nvl(:new.id_categoria,:old.id_categoria);
    IF :NEW.id_categoria IS NOT NULL AND :OLD.id_categoria IS NOT NULL THEN
        INSERT INTO BITACORA(ID_BITACORA,MENSAJE) values (BITACORA_SEQ.NEXTVAL,'Se actualizado una categoria con el el id ' || Categoriaid );
    ELSIF  :OLD.id_categoria IS NULL THEN
        INSERT INTO BITACORA(ID_BITACORA,MENSAJE) values (BITACORA_SEQ.NEXTVAL,'Se ha registrado un Categoria con el id ' || Categoriaid );
    END IF;
end ;
/
ALTER TRIGGER "SUPERMERCADO"."TR_CATEGORIA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SUPERMERCADO"."TR_CLIENTE" 
AFTER INSERT OR  UPDATE  ON Cliente
FOR EACH ROW
declare
clienteid Cliente.id_cliente%type;
BEGIN
clienteid := nvl(:new.id_cliente,:old.id_cliente);
    IF :NEW.id_cliente IS NOT NULL AND :OLD.id_cliente IS NOT NULL THEN
        INSERT INTO BITACORA(ID_BITACORA,MENSAJE) values (BITACORA_SEQ.NEXTVAL,'Se actualizado los detalles del cliente con el id ' || clienteid  );
    ELSIF  :OLD.id_cliente IS NULL THEN
        INSERT INTO BITACORA(ID_BITACORA,MENSAJE) values (BITACORA_SEQ.NEXTVAL,'Se ha registrado un cliente con el id ' || clienteid );
    END IF;
end ;
/
ALTER TRIGGER "SUPERMERCADO"."TR_CLIENTE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_DETALLEFACTURA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SUPERMERCADO"."TR_DETALLEFACTURA" 
AFTER INSERT ON FACTURADETALLE
FOR EACH ROW
declare
NUMFACTURA FACTURADETALLE.NUM_FACTURA%TYPE;
PRECIODETALLE FACTURADETALLE.PRECIO%TYPE;
BEGIN
  NUMFACTURA := :NEW.NUM_FACTURA;
  preciodetalle := :NEW.PRECIO;
  
  UPDATE FACTURA 
  SET SUBTOTAL = SUBTOTAL + PRECIODETALLE
  WHERE NUM_FACTURA = NUMFACTURA;
  
  UPDATE FACTURA SET TOTAL = SUBTOTAL + ((SUBTOTAL * IVA)/100) - ((SUBTOTAL * DESCUENTO)/100)
  WHERE NUM_FACTURA = NUMFACTURA;
end ;
/
ALTER TRIGGER "SUPERMERCADO"."TR_DETALLEFACTURA" ENABLE;
--------------------------------------------------------
--  DDL for Function FORMATEARPRECIO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SUPERMERCADO"."FORMATEARPRECIO" (p_precio in Articulo.precio%type)          
RETURN VARCHAR
IS
PRECIOCOLONES varchar(100);
BEGIN
 PRECIOCOLONES :=  TO_CHAR(p_precio,'FML999G999D99');
RETURN PRECIOCOLONES;
END;

/
--------------------------------------------------------
--  DDL for Function OBTENERCLIENTEPORID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SUPERMERCADO"."OBTENERCLIENTEPORID" (P_IDCLIENTE in CLIENTE.ID_CLIENTE%type)            
RETURN VARCHAR
IS
NOMBRECLIENTE MODO_PAGO.NOMBRE%TYPE;
BEGIN
  SELECT CLIENTES.NOMBRECOMPLETO(NOMBRE, APELLIDO) INTO NOMBRECLIENTE
  FROM CLIENTE
  WHERE ID_CLIENTE = P_IDCLIENTE;
 
  RETURN NOMBRECLIENTE;
  
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN
  DBMS_OUTPUT.PUT_LINE('No se encontro ningun dato');
  WHEN TOO_MANY_ROWS THEN
  DBMS_OUTPUT.PUT_LINE('Se encontro mas de una fila');
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Function OBTENERMODOPAGO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SUPERMERCADO"."OBTENERMODOPAGO" (P_IDMODOPAGO in MODO_PAGO.ID_MODOPAGO%type)            
RETURN MODO_PAGO.NOMBRE%TYPE
IS
NOMBREMODOPAGO MODO_PAGO.NOMBRE%TYPE;
BEGIN
  SELECT NOMBRE INTO NOMBREMODOPAGO
  FROM MODO_PAGO
  WHERE ID_MODOPAGO = P_IDMODOPAGO;
 
  RETURN NOMBREMODOPAGO;
  
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN
  DBMS_OUTPUT.PUT_LINE('No se encontro ningun dato');
  WHEN TOO_MANY_ROWS THEN
  DBMS_OUTPUT.PUT_LINE('Se encontro mas de una fila');
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Function OBTENERNOMBRECATEGORIA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SUPERMERCADO"."OBTENERNOMBRECATEGORIA" (p_idcategoria in CATEGORIA.ID_CATEGORIA%type)            
RETURN CATEGORIA.NOMBRE%TYPE
IS
NOMBRECATEGORIA CATEGORIA.NOMBRE%TYPE;
BEGIN
  SELECT NOMBRE INTO NOMBRECATEGORIA
  FROM CATEGORIA
  WHERE ID_CATEGORIA = p_idcategoria;
 
  RETURN NOMBRECATEGORIA;
END;

/
--------------------------------------------------------
--  DDL for Function OBTENERPRECIOARTICULO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SUPERMERCADO"."OBTENERPRECIOARTICULO" (p_idarticulo in ARTICULO.ID_ARTICULO%type)            
RETURN ARTICULO.PRECIO%TYPE
IS
PRECIOARTICULO ARTICULO.PRECIO%TYPE;
BEGIN
  SELECT PRECIO INTO PRECIOARTICULO
  FROM ARTICULO
  WHERE ID_ARTICULO = p_idarticulo;
 
  RETURN PRECIOARTICULO;
END;

/
--------------------------------------------------------
--  DDL for Package CATEGORIAS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "SUPERMERCADO"."CATEGORIAS" 
IS
  PROCEDURE CREAR(PNOMBRE IN CATEGORIA.NOMBRE%TYPE, PDESC IN CATEGORIA.DESCRIPCION%TYPE);
  PROCEDURE ACTUALIZAR(PID IN CATEGORIA.ID_CATEGORIA%TYPE, PNOMBRE IN CATEGORIA.NOMBRE%TYPE, PDESC IN CATEGORIA.DESCRIPCION%TYPE);
END;

/
--------------------------------------------------------
--  DDL for Package CLIENTES
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "SUPERMERCADO"."CLIENTES" 
IS
  PROCEDURE INSERTAR(e_nombre IN Cliente.nombre%type,e_apellido IN  Cliente.apellido%type,e_provincia IN Cliente.provincia%type,e_direccion IN Cliente.direccion%type,e_correo IN  Cliente.correo%type,e_telefono IN Cliente.telefono%type);
  FUNCTION NOMBRECOMPLETO(p_nombre in Cliente.nombre%type, p_apellido in Cliente.apellido%type) RETURN VARCHAR;
  PROCEDURE ACTUALIZAR(e_id in Cliente.id_cliente%type,e_nombre  in Cliente.nombre%type,e_apellido in  Cliente.apellido%type,e_provincia  in Cliente.provincia%type,e_direccion in Cliente.direccion%type,e_correo in Cliente.correo%type,e_telefono in  Cliente.telefono%type);
END;

/
--------------------------------------------------------
--  DDL for Package Body CATEGORIAS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "SUPERMERCADO"."CATEGORIAS" 
IS
PROCEDURE CREAR(PNOMBRE IN CATEGORIA.NOMBRE%TYPE, PDESC IN CATEGORIA.DESCRIPCION%TYPE)
IS
BEGIN
  INSERT INTO CATEGORIA VALUES(CATEGORIAS_SEQ.NEXTVAL, PNOMBRE, PDESC);
  COMMIT;
  EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
      DBMS_OUTPUT.PUT_LINE('Indice duplicado');
    WHEN TOO_MANY_ROWS THEN
      DBMS_OUTPUT.PUT_LINE('Error, demasiadas categorias');
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

PROCEDURE ACTUALIZAR(PID IN CATEGORIA.ID_CATEGORIA%TYPE, PNOMBRE IN CATEGORIA.NOMBRE%TYPE, PDESC IN CATEGORIA.DESCRIPCION%TYPE)
IS
BEGIN
  UPDATE CATEGORIA SET NOMBRE = PNOMBRE, DESCRIPCION = PDESC
  WHERE ID_CATEGORIA = PID;
  COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

END CATEGORIAS;

/
--------------------------------------------------------
--  DDL for Package Body CLIENTES
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "SUPERMERCADO"."CLIENTES" 
IS
  PROCEDURE INSERTAR(e_nombre IN Cliente.nombre%type,e_apellido IN  Cliente.apellido%type,e_provincia IN Cliente.provincia%type,e_direccion IN Cliente.direccion%type,e_correo IN  Cliente.correo%type,e_telefono IN Cliente.telefono%type)
  is
  begin 
  insert into CLIENTE (id_cliente,nombre,apellido,provincia,direccion,correo,telefono)
  values (CLIENTES_SEQ.nextval ,e_nombre,e_apellido,e_provincia,e_direccion,e_correo,e_telefono);
  COMMIT;
  exception
  WHEN OTHERS THEN
      dbms_output.put_line(SQLERRM);
  END;
  
  FUNCTION NOMBRECOMPLETO(p_nombre in Cliente.nombre%type, p_apellido in Cliente.apellido%type)          
  RETURN varchar
  IS
  NOMBRECOMPLETO varchar(100);
  BEGIN
   NOMBRECOMPLETO := p_nombre || ' ' ||  p_apellido;
  RETURN NOMBRECOMPLETO;
  END;
  
  PROCEDURE ACTUALIZAR(e_id in Cliente.id_cliente%type,e_nombre  in Cliente.nombre%type,e_apellido in  Cliente.apellido%type,e_provincia  in Cliente.provincia%type,e_direccion in Cliente.direccion%type,e_correo in Cliente.correo%type,e_telefono in  Cliente.telefono%type)
  is
  begin 
  Update Cliente set id_cliente=e_id, nombre=e_nombre,
  apellido=e_apellido,provincia= e_provincia ,direccion=e_direccion,correo=e_correo,telefono=e_telefono where id_cliente=e_id;
  COMMIT;
  exception
  WHEN OTHERS THEN
      dbms_output.put_line(SQLERRM);
  END;
  
END CLIENTES;

/
--------------------------------------------------------
--  DDL for Procedure CREARDETALLEFACTURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SUPERMERCADO"."CREARDETALLEFACTURA" (PIDFACTURA IN FACTURA.NUM_FACTURA%TYPE, PIDARTICULO IN ARTICULO.ID_ARTICULO%TYPE)
IS
BEGIN
  INSERT INTO FACTURADETALLE VALUES(FACTURADETALLE_SEQ.NEXTVAL, PIDFACTURA, PIDARTICULO, OBTENERPRECIOARTICULO(PIDARTICULO));
  COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Procedure CREARFACTURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SUPERMERCADO"."CREARFACTURA" (PIDCLIENTE IN CLIENTE.ID_CLIENTE%TYPE, PID_MODOPAGO IN MODO_PAGO.ID_MODOPAGO%TYPE, NUMFACTURA OUT FACTURA.NUM_FACTURA%TYPE)
IS
BEGIN
  INSERT INTO FACTURA(NUM_FACTURA, ID_MODOPAGO, ID_CLIENTE, IVA, DESCUENTO, SUBTOTAL, TOTAL) VALUES(FACTURA_SEQ.NEXTVAL, PID_MODOPAGO, PIDCLIENTE, 7, 30, 0, 0);
  COMMIT;
  NUMFACTURA := FACTURA_SEQ.CURRVAL;
  EXCEPTION
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Procedure FETCHARTICULO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SUPERMERCADO"."FETCHARTICULO" (
PID IN Articulo.ID_Articulo%TYPE,
Pid_categoria OUT Articulo.id_categoria%TYPE,
Pnombre OUT Articulo.nombre%TYPE,
Pprecio OUT Articulo.precio%TYPE,
Pcodigo_cabys OUT Articulo.codigo_cabys%TYPE)
  IS
  CURSOR CURSOSARTICULOS IS SELECT * FROM Articulo;
  FILA Articulo%ROWTYPE;
  BEGIN
    OPEN CURSOSARTICULOS;
    LOOP
      FETCH CURSOSARTICULOS INTO FILA;
      EXIT WHEN CURSOSARTICULOS%NOTFOUND;
      
      IF FILA.ID_Articulo = PID THEN
        Pid_categoria := FILA.id_categoria;
        Pnombre := FILA.nombre;
        Pprecio := FILA.precio;
        Pcodigo_cabys := FILA.codigo_cabys;
      END IF;
    END LOOP;
    CLOSE CURSOSARTICULOS;

    EXCEPTION
    WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Hay mas de una fila');
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No se encontraron datos');
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
  END;

/
--------------------------------------------------------
--  DDL for Procedure FETCHCLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SUPERMERCADO"."FETCHCLIENTE" (
PID IN CLIENTE.ID_CLIENTE%TYPE,
PNOMBRE OUT CLIENTE.NOMBRE%TYPE,
PAPELLIDO OUT CLIENTE.APELLIDO%TYPE,
PPROVINCIA OUT CLIENTE.PROVINCIA%TYPE,
PDIRECCION OUT CLIENTE.DIRECCION%TYPE,
PCORREO OUT CLIENTE.CORREO%TYPE,
PTELEFONO OUT CLIENTE.TELEFONO%TYPE)
  IS
  CURSOR CURSORCLIENTES IS SELECT * FROM CLIENTE;
  FILA CLIENTE%ROWTYPE;
  BEGIN
    OPEN CURSORCLIENTES;
    LOOP
      FETCH CURSORCLIENTES INTO FILA;
      EXIT WHEN CURSORCLIENTES%NOTFOUND;
      
      IF FILA.ID_CLIENTE = PID THEN
        PNOMBRE := FILA.NOMBRE;
        PAPELLIDO := FILA.APELLIDO;
        PPROVINCIA := FILA.PROVINCIA;
        PDIRECCION := FILA.DIRECCION;
        PCORREO := FILA.CORREO;
        PTELEFONO := FILA.TELEFONO;
      END IF;
    END LOOP;
    CLOSE CURSORCLIENTES;

    EXCEPTION
    WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Hay mas de una fila');
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No se encontraron datos');
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
  END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTARTICULO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SUPERMERCADO"."INSERTARTICULO" 
(
e_categoria IN Articulo.id_categoria%type,
e_nombre IN Articulo.nombre%type,
e_precio IN  Articulo.precio%type,
e_cabys IN Articulo.codigo_cabys%type)
is
begin 
insert into Articulo (id_articulo,id_categoria,nombre,precio,codigo_cabys)
values (ARTICULOS_SEQ.nextval ,e_categoria,e_nombre,e_precio,e_cabys);
COMMIT;
exception
WHEN OTHERS THEN
    dbms_output.put_line(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEARTICULO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SUPERMERCADO"."UPDATEARTICULO" 
(
e_id in Articulo.id_articulo%type,
e_categoria IN Articulo.id_categoria%type,
e_nombre IN Articulo.nombre%type,
e_precio IN  Articulo.precio%type,
e_cabys IN Articulo.codigo_cabys%type)
is
begin 
Update Articulo set id_articulo=e_id, id_categoria=e_categoria,
nombre=e_nombre,precio= e_precio ,codigo_cabys=e_cabys where id_articulo=e_id;
COMMIT;
exception
WHEN OTHERS THEN
    dbms_output.put_line(SQLERRM);
END;

/
